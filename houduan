<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>字典树搜索</title>
    <style>
        body 
        {
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        input 
        {
            padding: 8px;
            font-size: 16px;
            margin-bottom: 10px;
        }
        ul 
        {
            list-style-type: none;
            padding: 0;
        }
        li 
        {
            cursor: pointer;
            padding: 5px;
            border: 1px solid #ccc;
            margin-bottom: 5px;
        }
        li:hover 
        {
            background-color: #f0f0f0;
        }
    </style>
</head>

<body>
    <h1>急性脑出血相关搜索</h1>
    <input type="text" id="search-input" placeholder="输入搜索关键词">
    <ul id="suggestions-list"></ul>

    <script>
        class TrieNode 
        {
            constructor() 
            {
                this.children = {};
                this.is_end_of_word = false;
            }
        }
        class Trie 
        {
            constructor() 
            {
                this.root = new TrieNode();
            }
            insert(word) 
            {
                let node = this.root;
                for(let char of word) 
                {
                    if(!node.children[char])
                    {
                        node.children[char] = new TrieNode();
                    }
                    node = node.children[char];
                }
                node.is_end_of_word = true;
            }
            _collect_words(node, prefix, words)
            {
                if(node.is_end_of_word) 
                {
                    words.push(prefix);
                }
                for(let [char, child] of Object.entries(node.children))
                {
                    this._collect_words(child, prefix + char, words);
                }
            }
            search_prefix(prefix)
            {
                let node = this.root;
                for(let char of prefix) 
                {
                    if(!node.children[char])if(!node.children[char]) 
                    {{
                        return [];return [];
                    }}
                    node = node.children[char];children[char];
                }}
                让 words = [];[];
                this._collect_words(node, prefix, words);this._collect_words(node, prefix, words);
                返回词语；return words;
            }}
        }}

        // 与急性脑出血相关的关键词// 与急性脑出血相关的关键词
        const 急性脑出血关键词 = [const acute_cerebral_hemorrhage_keywords = [
            "脑出血""脑出血",
            "急性脑出血""急性脑出血",
            "脑子""脑子",
            “脑呀”"脑呀",
            "血吧""血吧",
            "急性脑出血的症状""急性脑出血的症状",
            "急性脑出血的治疗方法""急性脑出血的治疗方法"
        ];];

        // 创建字典树// 创建字典树
        const trie = new Trie();const trie = new Trie();

        // 插入关键词到字典树
        对于(let keyword of 急性脑出血关键词)for(let keyword of acute_cerebral_hemorrhage_keywords) 
        {{
            trie.insert(keyword);insert(keyword);
        }}

        const searchInput = document.getElementById('search-input');const searchInput = document.getElementById('search-input');
        const suggestionsList = document.getElementById('suggestions-list');const suggestionsList = document.getElementById('suggestions-list');

        searchInput.addEventListener('input', function ()addEventListener('input', function () 
        {{
            const searchValue = this.value;const searchValue = this.value;
            const suggestions = trie搜索前缀(searchValue);const suggestions = trie.search_prefix(searchValue);
            suggestionsList.innerHTML = '';innerHTML = '';
            对于（let suggestion of suggestions）for(let suggestion of suggestions) 
            {{
                const li = document.createElement('li');const li = document.createElement('li');
                li.textContent = 建议;textContent = suggestion;
                suggestionsList.appendChild(li);appendChild(li);
            }}
        });});
    </script>


